# Redirection HTTP vers HTTPS pour tous les domaines
server {
    listen 80;
    server_name tinkerbell-pentest.me www.tinkerbell-pentest.me analytics.tinkerbell-pentest.me apis.tinkerbell-pentest.me blogger.tinkerbell-pentest.me;

    # Redirige tout le trafic HTTP vers HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name tinkerbell-pentest.me www.tinkerbell-pentest.me analytics.tinkerbell-pentest.me apis.tinkerbell-pentest.me blogger.tinkerbell-pentest.me;

    # Certificats SSL pour les autres domaines
    ssl_certificate /etc/letsencrypt/live/tinkerbell-pentest.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tinkerbell-pentest.me/privkey.pem;

    # Configuration par défaut pour les autres domaines
    location / {
        root /var/www/tinkerbell-pentest.me/;
        index index.html;
    }
}



server {
    listen 80;
    server_name sli.tinkerbell-pentest.me;

    # Redirige tout le trafic HTTP vers HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name sli.tinkerbell-pentest.me;

    # Certificats SSL pour sli.tinkerbell-pentest.me
    ssl_certificate /etc/letsencrypt/live/sli.tinkerbell-pentest.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sli.tinkerbell-pentest.me/privkey.pem;

    # Si Docker est en marche, proxy_pass vers le conteneur Docker nginx_sli
    # Si Docker n'est pas en marche, page de maintenance 503
    location / {
        # Tente de proxy_pass vers nginx_sli dans Docker
        proxy_pass http://127.0.0.1:8888;  # Remplace par le port de Docker

        # Si Docker est éteint, retourne une erreur 503
        error_page 502 503 504 /503.html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Page d'erreur personnalisée pour le cas où Docker est éteint
    location = /503.html {
        internal;
        root /usr/share/nginx/html;
        default_type text/html;
        return 503;
    }

    # Configuration des requêtes API
    location /api/ {
        proxy_pass http://127.0.0.1:3000/;  # API Gateway Docker
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
